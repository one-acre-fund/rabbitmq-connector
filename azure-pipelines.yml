# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- develop

resources:
- repo: self

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
      
    - script: |
        VERSION_TAG=`git describe --abbrev=0 --tags`
        echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"

        IMAGE_TAGS="${VERSION_TAG}_$(Build.SourceVersion)"
        SPECIFIC_TAG="${IMAGE_TAGS}"
        echo "##vso[task.setvariable variable=IMAGE_SEMANTIC_HASH]$IMAGE_TAGS"
        IMAGE_TAGS="$IMAGE_TAGS,latest"
        echo Tags: $IMAGE_TAGS
        echo "##vso[task.setvariable variable=IMAGE_TAGS]$IMAGE_TAGS"
      displayName: Get git tag

    - task: Docker@2
      displayName: Login to docker registry
      inputs:
        containerRegistry: 'azurecr-oaf'
        command: 'login'

    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(IMAGE_TAGS)

    - script: docker images
      displayName: List all local images

    - script: docker tag oaftech.azurecr.io/oneacrefund/rabbitmq-connector:$(IMAGE_TAGS) oaftech.azurecr.io/oneacrefund/rabbitmq-connector:$(VERSION_TAG)
      displayName: Explicitly re-tag image
    
    - task: Docker@2
      displayName: Publish Docker image
      condition: succeeded()
      inputs:
        containerRegistry: 'azurecr-oaf'
        repository: 'oneacrefund/duma'
        command: 'push'
        tags: |
          $(IMAGE_TAGS)

    # - task: Docker@2
    #   displayName: push image to registry
    #   inputs:
    #     containerRegistry: azurecr-oaf
    #     repository: oneacrefund/rabbitmq-connector
    #     command: push
    #     tags: "$(IMAGE_TAGS)"
 
    - task: PublishBuildArtifacts@1
      displayName: Publish configuration package
      # Only publish main branch
      # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: rabbitmq
        publishLocation: Container
